{"version":3,"sources":["image/pic.jpg","user.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","userData","map","user","index","class","src","avatar","alt","id","first_name","last_name","email","App","React","useState","isDateLoaded","setIsDateLoaded","setUserData","isButtonClick","setisButtonClick","className","href","onClick","fetch","then","response","json","res","data","setInterval","catch","err","console","log","require","default","width","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wJAAA,OAAe,cAA0B,iC,qGCE1B,SAASA,EAAMC,GAC5B,OACE,mCACGA,EAAMC,SAASC,KAAI,SAACC,EAAMC,GACzB,OAEE,sBAAKC,MAAM,SAAX,UACE,qBAAKA,MAAM,QAAX,SACE,qBAAKC,IAAKH,EAAKI,OAAQC,IAAI,OAE3B,sBAAKH,MAAM,UAAX,UACE,6BACE,+BAAM,4BAAKF,EAAKM,GAAG,IAAIN,EAAKO,WAAY,IAAKP,EAAKQ,gBAEpD,4BAAIR,EAAKS,mB,MCoCVC,MA/Cf,WACE,MAAwCC,IAAMC,UAAS,GAAvD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgCH,IAAMC,SAAS,IAA/C,mBAAOd,EAAP,KAAiBiB,EAAjB,KACA,EAA0CJ,IAAMC,UAAS,GAAzD,mBAAOI,EAAP,KAAsBC,EAAtB,KAeA,OACE,mCACE,0BAASC,UAAU,iBAAnB,UAEE,sBAAKhB,MAAM,SAASI,GAAG,SAAvB,UACA,oBAAIJ,MAAM,OAAV,mBACE,mBAAGiB,KAAK,YAAYjB,MAAM,MAAMkB,QApBpB,WAClBH,GAAiB,GACjBI,MAAM,sCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLV,EAAYU,EAAIC,MAChBC,aAAY,WACVb,GAAgB,KACf,SAEJc,OAAM,SAACC,GACNC,QAAQC,IAAIF,OASV,0BAGF,qBAAKX,UAAU,YAAf,SACE,qBAAKA,UAAU,8BAAf,SACGF,EACCH,EACE,cAACjB,EAAD,CAAOE,SAAUA,IAEjB,qBAAKI,MAAM,WAGb,qBAAKgB,UAAU,MAAf,SACE,qBAAKf,IAAK6B,EAAQ,IAAmBC,QAASC,MAAM,SAASC,OAAO,sBC9BrEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.53a6c866.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pic.0116bc89.jpg\";","import React from \"react\";\r\nimport \"./style.css\";\r\nexport default function Cards(props) {\r\n  return (\r\n    <>\r\n      {props.userData.map((user, index) => {\r\n        return (\r\n  \r\n          <div class=\"column\">\r\n            <div class=\"image\">\r\n              <img src={user.avatar} alt=\"\"></img>\r\n            </div>\r\n              <div class=\"details\">\r\n                <h2>\r\n                  <span><b>{ user.id+' '+user.first_name +' '+ user.last_name }</b></span>\r\n                </h2>\r\n                <p>{user.email}</p>\r\n                \r\n                </div>\r\n                \r\n            </div>\r\n          \r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}","import React from \"react\";\nimport { useState } from \"react\";\nimport Cards from \"./user\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isDateLoaded, setIsDateLoaded] = React.useState(false);\n  const [userData, setUserData] = React.useState([]);\n  const [isButtonClick, setisButtonClick] = React.useState(false);\n  const handleClick = () => {\n    setisButtonClick(true);\n    fetch(\"https://reqres.in/api/users?page=1\")\n      .then((response) => response.json())\n      .then((res) => {\n        setUserData(res.data);\n        setInterval(() => {\n          setIsDateLoaded(true);\n        }, 1500);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <>\n      <section className=\"wholecontainer\">\n      \n        <div class=\"topnav\" id=\"topnav\">\n        <h4 class=\"logo\">Zippy</h4>\n          <a href=\"#getusers\" class=\"btn\" onClick={handleClick}>Get Users</a>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"row justify-content-center \">\n            {isButtonClick ? (\n              isDateLoaded ? (\n                <Cards userData={userData} />\n              ) : (\n                <div class=\"loader\"></div>\n              )\n              ) : (\n              <div className=\"img\">\n                <img src={require(\"./image/pic.jpg\").default} width=\"1400px\" height=\"600px\"></img>\n              </div>\n            )}\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}